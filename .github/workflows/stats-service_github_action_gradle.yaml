name: 'github-actions-stats-service'

on:
  release:
    types: [published]
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better SonarQube analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Execute Gradle build and tests
        run: ./gradlew build test jacocoTestReport --no-daemon --continue

      # Aseguramos que el informe de jacoco esté disponible para SonarCloud
      - name: Generate jacoco merged report
        run: ./gradlew jacocoMergedReport || echo "jacocoMergedReport task not found"

      # Análisis de SonarQube con la tarea 'sonar' y modo detallado
      - name: SonarCloud Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        # Usando la tarea 'sonar' en lugar de 'sonarqube' y añadiendo información detallada para depuración
        run: ./gradlew sonar --info -Dsonar.verbose=true -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} -Dsonar.host.url=https://sonarcloud.io -Dsonar.qualitygate.wait=true -Dsonar.alm.enabled=false -Dsonar.analysis.mode=publish -Dsonar.scanner.metadataFilePath=none -Dsonar.scanner.force-deprecated-ce-task=true

      # Publicar artefactos de construcción
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-build
          path: applications/app-service/build/libs/*.jar
          retention-days: 7

      # Ejecutar tests de integración (si existen)
      - name: Run integration tests
        run: ./gradlew integrationTest || echo "No integration tests to run"

      # Verificar vulnerabilidades de dependencias
      - name: Check for vulnerabilities
        run: ./gradlew dependencyCheckAnalyze || echo "Dependency check not configured"

  docker:
    needs: build
    if: github.event_name == 'push' || github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: app-build
          path: applications/app-service/build/libs/

      # Establecer variable de versión
      - name: Set version
        id: version
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            echo "VERSION=${{ github.event.release.tag_name }}" >> $GITHUB_ENV
          else
            echo "VERSION=latest" >> $GITHUB_ENV
          fi

      # Construir imagen Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        if: github.event_name == 'push' || github.event_name == 'release'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name == 'push' || github.event_name == 'release' }}
          tags: santiagoso2425/stats-service:${{ env.VERSION }}
          build-args: |
            JAR_FILE=applications/app-service/build/libs/*.jar

  release:
    if: github.event_name == 'release' 
    runs-on: ubuntu-latest
    needs: [build, docker]
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Descargar artefactos de construcción
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: app-build
          path: applications/app-service/build/libs/

      # Crear nota de release con cambios
      - name: Generate release changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          configuration: "changelog-config.json"
          commitMode: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Adjuntar JAR al release
      - name: Attach JARs to release
        uses: softprops/action-gh-release@v2
        with:
          files: applications/app-service/build/libs/*.jar
          body: ${{steps.github_release.outputs.changelog}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
